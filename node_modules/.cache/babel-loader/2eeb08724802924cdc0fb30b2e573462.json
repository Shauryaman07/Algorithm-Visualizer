{"ast":null,"code":"const insertionSort = (array, position, arraySteps, colorSteps) => {\n  let colorKey = colorSteps[colorSteps.length - 1].slice();\n  let i, j, key;\n\n  for (i = 1; i < array.length; i++) {\n    key = array[i];\n    j = i - 1;\n\n    while (j >= 0 && array[j] > key) {\n      array[j + 1] = array[j];\n      arraySteps.push(array.slice());\n      colorKey[i] = 3;\n\n      if (i === j + 1) {\n        colorKey[j + 1] = 4;\n      } else {\n        colorKey[j + 1] = 1;\n      }\n\n      colorKey[j] = 1;\n      colorSteps.push(colorKey.slice());\n      colorKey[j + 1] = 0;\n      colorKey[i] = 0;\n      colorKey[j] = 0;\n      j = j - 1;\n    }\n\n    array[j + 1] = key;\n    arraySteps.push(array.slice());\n    colorSteps.push(colorKey.slice());\n  }\n\n  colorSteps[colorSteps.length - 1] = new Array(array.length).fill(2);\n};\n\nexport default insertionSort;","map":{"version":3,"sources":["C:/Users/shaur/OneDrive/Desktop/visualizer/Sorting-Visualizer-Complete/src/algorithms/InsertionSort.js"],"names":["insertionSort","array","position","arraySteps","colorSteps","colorKey","length","slice","i","j","key","push","Array","fill"],"mappings":"AAAA,MAAMA,aAAa,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,UAAlB,EAA8BC,UAA9B,KAA6C;AAClE,MAAIC,QAAQ,GAAGD,UAAU,CAACA,UAAU,CAACE,MAAX,GAAoB,CAArB,CAAV,CAAkCC,KAAlC,EAAf;AAEA,MAAIC,CAAJ,EAAOC,CAAP,EAAUC,GAAV;;AACA,OAAKF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGP,KAAK,CAACK,MAAtB,EAA8BE,CAAC,EAA/B,EAAmC;AAClCE,IAAAA,GAAG,GAAGT,KAAK,CAACO,CAAD,CAAX;AACAC,IAAAA,CAAC,GAAGD,CAAC,GAAG,CAAR;;AAEA,WAAOC,CAAC,IAAI,CAAL,IAAUR,KAAK,CAACQ,CAAD,CAAL,GAAWC,GAA5B,EAAiC;AAChCT,MAAAA,KAAK,CAACQ,CAAC,GAAG,CAAL,CAAL,GAAeR,KAAK,CAACQ,CAAD,CAApB;AACAN,MAAAA,UAAU,CAACQ,IAAX,CAAgBV,KAAK,CAACM,KAAN,EAAhB;AACAF,MAAAA,QAAQ,CAACG,CAAD,CAAR,GAAc,CAAd;;AACS,UAAKA,CAAC,KAAKC,CAAC,GAAG,CAAf,EAAkB;AACdJ,QAAAA,QAAQ,CAACI,CAAC,GAAG,CAAL,CAAR,GAAkB,CAAlB;AACH,OAFD,MAEM;AACFJ,QAAAA,QAAQ,CAACI,CAAC,GAAG,CAAL,CAAR,GAAkB,CAAlB;AACH;;AACVJ,MAAAA,QAAQ,CAACI,CAAD,CAAR,GAAc,CAAd;AACAL,MAAAA,UAAU,CAACO,IAAX,CAAgBN,QAAQ,CAACE,KAAT,EAAhB;AACSF,MAAAA,QAAQ,CAACI,CAAC,GAAG,CAAL,CAAR,GAAkB,CAAlB;AACAJ,MAAAA,QAAQ,CAACG,CAAD,CAAR,GAAc,CAAd;AACTH,MAAAA,QAAQ,CAACI,CAAD,CAAR,GAAc,CAAd;AACAA,MAAAA,CAAC,GAAGA,CAAC,GAAG,CAAR;AACA;;AACDR,IAAAA,KAAK,CAACQ,CAAC,GAAG,CAAL,CAAL,GAAeC,GAAf;AACAP,IAAAA,UAAU,CAACQ,IAAX,CAAgBV,KAAK,CAACM,KAAN,EAAhB;AACAH,IAAAA,UAAU,CAACO,IAAX,CAAgBN,QAAQ,CAACE,KAAT,EAAhB;AACA;;AACDH,EAAAA,UAAU,CAACA,UAAU,CAACE,MAAX,GAAoB,CAArB,CAAV,GAAoC,IAAIM,KAAJ,CAAUX,KAAK,CAACK,MAAhB,EAAwBO,IAAxB,CAA6B,CAA7B,CAApC;AACA,CA7BD;;AA+BA,eAAeb,aAAf","sourcesContent":["const insertionSort = (array, position, arraySteps, colorSteps) => {\r\n\tlet colorKey = colorSteps[colorSteps.length - 1].slice();\r\n\r\n\tlet i, j, key;\r\n\tfor (i = 1; i < array.length; i++) {\r\n\t\tkey = array[i];\r\n\t\tj = i - 1;\r\n\r\n\t\twhile (j >= 0 && array[j] > key) {\r\n\t\t\tarray[j + 1] = array[j];\r\n\t\t\tarraySteps.push(array.slice());\r\n\t\t\tcolorKey[i] = 3;\r\n            if ( i === j + 1 ){\r\n                colorKey[j + 1] = 4;\r\n            } else{\r\n                colorKey[j + 1] = 1;\r\n            }\r\n\t\t\tcolorKey[j] = 1;\r\n\t\t\tcolorSteps.push(colorKey.slice());\r\n            colorKey[j + 1] = 0;\r\n            colorKey[i] = 0;\r\n\t\t\tcolorKey[j] = 0;\r\n\t\t\tj = j - 1;\r\n\t\t}\r\n\t\tarray[j + 1] = key;\r\n\t\tarraySteps.push(array.slice());\r\n\t\tcolorSteps.push(colorKey.slice());\r\n\t}\r\n\tcolorSteps[colorSteps.length - 1] = new Array(array.length).fill(2);\r\n};\r\n\r\nexport default insertionSort;\r\n"]},"metadata":{},"sourceType":"module"}